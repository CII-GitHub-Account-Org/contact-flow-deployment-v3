import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { EncryptionSettingFilterSensitiveLog, } from "./models_0";
export const TranscriptFormat = {
    Lex: "Lex",
};
export const GenerationStatus = {
    Complete: "Complete",
    Failed: "Failed",
    InProgress: "InProgress",
};
export const MergeStrategy = {
    Append: "Append",
    FailOnConflict: "FailOnConflict",
    Overwrite: "Overwrite",
};
export const TestSetModality = {
    Audio: "Audio",
    Text: "Text",
};
export const TestExecutionApiMode = {
    NonStreaming: "NonStreaming",
    Streaming: "Streaming",
};
export const TestExecutionModality = {
    Audio: "Audio",
    Text: "Text",
};
export const TestExecutionStatus = {
    Completed: "Completed",
    Failed: "Failed",
    InProgress: "InProgress",
    Pending: "Pending",
    Stopped: "Stopped",
    Stopping: "Stopping",
    Waiting: "Waiting",
};
export const TestSetStatus = {
    Deleting: "Deleting",
    Importing: "Importing",
    PendingAnnotation: "PendingAnnotation",
    Ready: "Ready",
    ValidationError: "ValidationError",
};
export const TestSetDiscrepancyReportStatus = {
    Completed: "Completed",
    Failed: "Failed",
    InProgress: "InProgress",
};
export const TestSetGenerationStatus = {
    Failed: "Failed",
    Generating: "Generating",
    Pending: "Pending",
    Ready: "Ready",
};
export const ExportFilterName = {
    ExportResourceType: "ExportResourceType",
};
export const ExportFilterOperator = {
    Contains: "CO",
    Equals: "EQ",
};
export const ExportSortAttribute = {
    LastUpdatedDateTime: "LastUpdatedDateTime",
};
export const GenerationSortByAttribute = {
    creationStartTime: "creationStartTime",
    lastUpdatedTime: "lastUpdatedTime",
};
export const ImportFilterName = {
    ImportResourceType: "ImportResourceType",
};
export const ImportFilterOperator = {
    Contains: "CO",
    Equals: "EQ",
};
export const ImportResourceType = {
    Bot: "Bot",
    BotLocale: "BotLocale",
    CustomVocabulary: "CustomVocabulary",
    TestSet: "TestSet",
};
export const ImportSortAttribute = {
    LastUpdatedDateTime: "LastUpdatedDateTime",
};
export const IntentFilterName = {
    IntentName: "IntentName",
};
export const IntentFilterOperator = {
    Contains: "CO",
    Equals: "EQ",
};
export const IntentSortAttribute = {
    IntentName: "IntentName",
    LastUpdatedDateTime: "LastUpdatedDateTime",
};
export const IntentState = {
    Failed: "Failed",
    Fulfilled: "Fulfilled",
    FulfillmentInProgress: "FulfillmentInProgress",
    InProgress: "InProgress",
    ReadyForFulfillment: "ReadyForFulfillment",
    Waiting: "Waiting",
};
export const TimeDimension = {
    Days: "Days",
    Hours: "Hours",
    Weeks: "Weeks",
};
export const SlotFilterName = {
    SlotName: "SlotName",
};
export const SlotFilterOperator = {
    Contains: "CO",
    Equals: "EQ",
};
export const SlotSortAttribute = {
    LastUpdatedDateTime: "LastUpdatedDateTime",
    SlotName: "SlotName",
};
export const SlotTypeFilterName = {
    ExternalSourceType: "ExternalSourceType",
    SlotTypeName: "SlotTypeName",
};
export const SlotTypeFilterOperator = {
    Contains: "CO",
    Equals: "EQ",
};
export const SlotTypeSortAttribute = {
    LastUpdatedDateTime: "LastUpdatedDateTime",
    SlotTypeName: "SlotTypeName",
};
export const SlotTypeCategory = {
    Composite: "Composite",
    Custom: "Custom",
    Extended: "Extended",
    ExternalGrammar: "ExternalGrammar",
};
export const TestResultTypeFilter = {
    ConversationLevelTestResults: "ConversationLevelTestResults",
    IntentClassificationTestResults: "IntentClassificationTestResults",
    OverallTestResults: "OverallTestResults",
    SlotResolutionTestResults: "SlotResolutionTestResults",
    UtteranceLevelResults: "UtteranceLevelResults",
};
export const TestExecutionSortAttribute = {
    CreationDateTime: "CreationDateTime",
    TestSetName: "TestSetName",
};
export const TestSetSortAttribute = {
    LastUpdatedDateTime: "LastUpdatedDateTime",
    TestSetName: "TestSetName",
};
export const UtteranceContentType = {
    CustomPayload: "CustomPayload",
    ImageResponseCard: "ImageResponseCard",
    PlainText: "PlainText",
    SSML: "SSML",
};
export const SearchOrder = {
    Ascending: "Ascending",
    Descending: "Descending",
};
export const DescribeBotRecommendationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionSetting && { encryptionSetting: EncryptionSettingFilterSensitiveLog(obj.encryptionSetting) }),
});
export const StartBotRecommendationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionSetting && { encryptionSetting: EncryptionSettingFilterSensitiveLog(obj.encryptionSetting) }),
});
export const StartBotRecommendationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionSetting && { encryptionSetting: EncryptionSettingFilterSensitiveLog(obj.encryptionSetting) }),
});
export const StartImportRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.filePassword && { filePassword: SENSITIVE_STRING }),
});
export const UpdateBotRecommendationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionSetting && { encryptionSetting: EncryptionSettingFilterSensitiveLog(obj.encryptionSetting) }),
});
export const UpdateBotRecommendationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.encryptionSetting && { encryptionSetting: EncryptionSettingFilterSensitiveLog(obj.encryptionSetting) }),
});
export const UpdateExportRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.filePassword && { filePassword: SENSITIVE_STRING }),
});
